{"version":3,"sources":["components/NewTaskForm.js","components/Task.js","components/TaskList.js","components/Footer.js","constants.js","App.js","index.js"],"names":["NewTaskForm","className","placeholder","autoFocus","Component","Task","this","props","task","desc","created","mod","deleteSelf","toggleCompletedSelf","type","checked","onChange","onClick","value","TaskList","list","onToggleCompleted","onDeleteTask","map","id","Footer","ACTIVE","COMPLETED","MOCK_CREATED","App","state","tasks","Date","now","toggleCompleted","toggledTask","find","setState","deleteTask","filter","ReactDOM","render","document","getElementById"],"mappings":"kNAceA,E,4JAXb,WACE,OACE,uBACEC,UAAU,WACVC,YAAY,yBACZC,WAAS,Q,GANSC,aC6BXC,E,4JA5Bb,WACE,MAA+BC,KAAKC,MAAMC,KAAlCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,EAA4CL,KAAKC,MAAzCK,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,oBAEpB,OACE,qBAAIZ,UAAWU,EAAf,UACE,sBAAKV,UAAU,OAAf,UACE,uBACEA,UAAU,SACVa,KAAK,WACLC,QAAiB,cAARJ,EACTK,SAAUH,IAEZ,kCACE,sBAAMZ,UAAU,cAAhB,SAA+BQ,IAC/B,sBAAMR,UAAU,UAAhB,SAA2BS,OAE7B,wBAAQT,UAAU,mBAClB,wBAAQA,UAAU,oBAAoBgB,QAASL,OAExC,YAARD,GACC,uBAAOG,KAAK,OAAOb,UAAU,OAAOiB,MAAM,wB,GAtBjCd,aCuBJe,E,4JArBb,WACE,MAAkDb,KAAKC,MAA/Ca,EAAR,EAAQA,KAAMC,EAAd,EAAcA,kBAAmBC,EAAjC,EAAiCA,aAEjC,OACE,oBAAIrB,UAAU,YAAd,SACGmB,EAAKG,KAAI,SAACf,GACT,OACE,cAAC,WAAD,UACE,cAAC,EAAD,CACEA,KAAMA,EACNI,WAAY,kBAAMU,EAAad,EAAKgB,KACpCX,oBAAqB,kBAAMQ,EAAkBb,EAAKgB,QAJvChB,EAAKgB,a,GARTpB,aCqBRqB,E,4JArBb,WACE,OACE,yBAAQxB,UAAU,SAAlB,UACE,sBAAMA,UAAU,aAAhB,0BACA,qBAAIA,UAAU,UAAd,UACE,6BACE,wBAAQA,UAAU,WAAlB,mBAEF,6BACE,8CAEF,6BACE,oDAGJ,wBAAQA,UAAU,kBAAlB,oC,GAhBaG,aCFRsB,EAAS,SACTC,EAAY,YAEZC,EAAe,yBCuEbC,E,4MAhEbC,MAAQ,CACNC,MAAO,CACL,CACEP,GAAG,GAAD,OAAKQ,KAAKC,MAAV,WACFxB,KAAM,SACNC,QAASkB,EACTjB,IAAKe,GAGP,CACEF,GAAG,GAAD,OAAKQ,KAAKC,MAAV,cACFxB,KAAM,YACNC,QAASkB,EACTjB,IAAKgB,GAGP,CACEH,GAAG,GAAD,OAAKQ,KAAKC,MAAV,YACFxB,KAAM,UACNC,QAASkB,EACTjB,IAAKe,K,EAKXQ,gBAAkB,SAACV,GACjB,IAAMW,EAAc,EAAKL,MAAMC,MAAMK,MAAK,SAAC5B,GAAD,OAAUA,EAAKgB,KAAOA,KAChEW,EAAYxB,IAAMwB,EAAYxB,MAAQe,EAASC,EAAYD,EAC3D,EAAKW,UAAS,SAACP,GACb,MAAO,CACLC,MAAM,YAAKD,EAAMC,Y,EAKvBO,WAAa,SAACd,GACZ,EAAKa,UAAS,SAACP,GACb,MAAO,CACLC,MAAOD,EAAMC,MAAMQ,QAAO,SAAC/B,GAAD,OAAUA,EAAKgB,KAAOA,U,4CAKtD,WACE,OACE,0BAASvB,UAAU,UAAnB,UACE,yBAAQA,UAAU,SAAlB,UACE,uCACA,cAAC,EAAD,OAGF,0BAASA,UAAU,OAAnB,UACE,cAAC,EAAD,CACEmB,KAAMd,KAAKwB,MAAMC,MACjBV,kBAAmBf,KAAK4B,gBACxBZ,aAAchB,KAAKgC,aAErB,cAAC,EAAD,c,GA1DQlC,a,MCJlBoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4ed17e8a.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\n\r\nclass NewTaskForm extends Component {\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"new-todo\"\r\n        placeholder=\"What needs to be done?\"\r\n        autoFocus\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default NewTaskForm\r\n","import React, { Component } from \"react\"\r\n\r\nclass Task extends Component {\r\n  render() {\r\n    const { desc, created, mod } = this.props.task\r\n    const { deleteSelf, toggleCompletedSelf } = this.props\r\n\r\n    return (\r\n      <li className={mod}>\r\n        <div className=\"view\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            checked={mod === \"completed\"}\r\n            onChange={toggleCompletedSelf}\r\n          />\r\n          <label>\r\n            <span className=\"description\">{desc}</span>\r\n            <span className=\"created\">{created}</span>\r\n          </label>\r\n          <button className=\"icon icon-edit\"></button>\r\n          <button className=\"icon icon-destroy\" onClick={deleteSelf}></button>\r\n        </div>\r\n        {mod === \"editing\" && (\r\n          <input type=\"text\" className=\"edit\" value=\"Editing task\" />\r\n        )}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Task\r\n","import React, { Component, Fragment } from \"react\"\r\nimport Task from \"./Task\"\r\n\r\nclass TaskList extends Component {\r\n  render() {\r\n    const { list, onToggleCompleted, onDeleteTask } = this.props\r\n\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {list.map((task) => {\r\n          return (\r\n            <Fragment key={task.id}>\r\n              <Task\r\n                task={task}\r\n                deleteSelf={() => onDeleteTask(task.id)}\r\n                toggleCompletedSelf={() => onToggleCompleted(task.id)}\r\n              />\r\n            </Fragment>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskList\r\n","import React, { Component } from \"react\"\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">1 items left</span>\r\n        <ul className=\"filters\">\r\n          <li>\r\n            <button className=\"selected\">All</button>\r\n          </li>\r\n          <li>\r\n            <button>Active</button>\r\n          </li>\r\n          <li>\r\n            <button>Completed</button>\r\n          </li>\r\n        </ul>\r\n        <button className=\"clear-completed\">Clear completed</button>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer\r\n","export const ACTIVE = \"active\"\r\nexport const COMPLETED = \"completed\"\r\nexport const EDITING = \"editing\"\r\nexport const MOCK_CREATED = \"created 17 seconds ago\"\r\n","import React, { Component } from \"react\"\n\nimport NewTaskForm from \"./components/NewTaskForm\"\nimport TaskList from \"./components/TaskList\"\nimport Footer from \"./components/Footer\"\n\nimport { ACTIVE, COMPLETED } from \"./constants\"\nimport { MOCK_CREATED } from \"./constants\"\n\nclass App extends Component {\n  state = {\n    tasks: [\n      {\n        id: `${Date.now()}-Active`,\n        desc: \"Active\",\n        created: MOCK_CREATED,\n        mod: ACTIVE,\n      },\n\n      {\n        id: `${Date.now()}-Completed`,\n        desc: \"Completed\",\n        created: MOCK_CREATED,\n        mod: COMPLETED,\n      },\n\n      {\n        id: `${Date.now()}-Editing`,\n        desc: \"Editing\",\n        created: MOCK_CREATED,\n        mod: ACTIVE,\n      },\n    ],\n  }\n\n  toggleCompleted = (id) => {\n    const toggledTask = this.state.tasks.find((task) => task.id === id)\n    toggledTask.mod = toggledTask.mod === ACTIVE ? COMPLETED : ACTIVE\n    this.setState((state) => {\n      return {\n        tasks: [...state.tasks],\n      }\n    })\n  }\n\n  deleteTask = (id) => {\n    this.setState((state) => {\n      return {\n        tasks: state.tasks.filter((task) => task.id !== id),\n      }\n    })\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTaskForm />\n        </header>\n\n        <section className=\"main\">\n          <TaskList\n            list={this.state.tasks}\n            onToggleCompleted={this.toggleCompleted}\n            onDeleteTask={this.deleteTask}\n          />\n          <Footer />\n        </section>\n      </section>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}